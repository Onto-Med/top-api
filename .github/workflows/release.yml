# This workflow will build a package using Maven and publish it to GitHub Packages. It will also create a new release.

name: Publish packages and create release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
        server-id: github
        settings-path: ${{ github.workspace }}
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - run: mvn -B install --no-transfer-progress --file pom.xml

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
        server-id: github
        settings-path: ${{ github.workspace }}
    - uses: actions/setup-node@v3
      with:
        node-version: 14
        registry-url: https://npm.pkg.github.com
    - name: Get version
      run: echo project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout) >> $GITHUB_ENV

    - name: Publish to GitHub Packages Apache Maven
      run: mvn -B --no-transfer-progress deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - name: Install dependencies
      working-directory: ./target/generated-sources/openapi/axios
      run: npm install
    - name: Publish npm package
      working-directory: ./target/generated-sources/openapi/axios
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    
    - name: Create release
      uses: "softprops/action-gh-release@v1"
      with:
        tag_name: v${{ env.project_version }}
        prerelease: false
        name: v${{ env.project_version }}
        generate_release_notes: true
        fail_on_unmatched_files: true
        body: |
          Maven:
          ```
          <dependencies>
            <dependency>
                <groupId>care.smith.top</groupId>
                <artifactId>top-api</artifactId>
                <version>${{ env.project_version }}</version>
            </dependency>
          </dependencies>
          ```
        files: |
          LICENSE
          target/*.jar
